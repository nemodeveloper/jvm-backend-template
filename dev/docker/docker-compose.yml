version: '3.8'

services:

  # Локальная БД сервиса
  awesome-template-postgres:
    image: "postgres:latest"
    container_name: awesome-template-postgres
    environment:
      POSTGRES_DB: awesome_template
      POSTGRES_USER: awesome_template_admin
      POSTGRES_PASSWORD: awesome_template_admin
    ports:
      - "5432:5432"

  # HTTP мок сервис wiremock
  awesome-template-wiremock:
    image: wiremock/wiremock:latest
    container_name: awesome-template-wiremock
    ports:
      - "8083:8080"
    volumes:
      - ./wiremock/__files/:/home/wiremock/__files/
      - ./wiremock/mappings/:/home/wiremock/mappings/
    command:
      - -verbose
      - -global-response-templating

  # Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    links:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_BROKER_ID: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686" # Jaeger UI
      - "4317:4317" # OTLP receiver
    environment:
      - COLLECTOR_OTLP_ENABLED=true

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin1234
      AWS_S3_FORCE_PATH_STYLE: false
    command: server --console-address ":9001" /data

  minio-mc:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set local http://host.docker.internal:9000 admin admin1234;
      /usr/bin/mc mb local/awesome-template;
      /usr/bin/mc policy set public local/awesome-template;
      "

#  prometheus:
#    image: prom/prometheus
#    container_name: prometheus
#    hostname: prometheus
#    #    network_mode: host
#    volumes:
#      - ./prometheus:/etc/prometheus/
#    command:
#      - --config.file=/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090"
#    environment:
#      TZ: "Europe/Moscow"
#
#  grafana:
#    image: grafana/grafana
#    container_name: grafana
#    hostname: grafana
#    user: root
#    ports:
#      - "3000:3000"
#    volumes:
#      - ./grafana:/var/lib/grafana
#      - ./grafana/provisioning/:/etc/grafana/provisioning/
#    environment:
#      TZ: "Europe/Moscow"

volumes:
  minio_storage: {}
